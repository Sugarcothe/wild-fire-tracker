{"version":3,"sources":["component/LocationMarker.js","component/LocationInfoBox.js","component/Map.js","component/Loader.js","App.js","reportWebVitals.js","index.js"],"names":["LocationMarker","lat","lng","onClick","className","icon","locationIcon","LocationInfoBox","info","id","title","Map","eventData","center","zoom","useState","locationInfo","setLocationInfo","markers","map","ev","categories","geometries","coordinates","bootstrapURLKeys","key","defaultCenter","defaultZoom","defaultProps","Loader","App","setEventData","setLoading","useEffect","a","fetch","res","json","events","fetchEvents","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iPAWeA,EARQ,SAAC,GAAwB,EAAvBC,IAAuB,EAAlBC,IAAmB,IAAdC,EAAa,EAAbA,QACjC,OACE,qBAAKC,UAAU,kBAAkBD,QAASA,EAA1C,SACE,cAAC,OAAD,CAAME,KAAMC,IAAcF,UAAU,qBCS3BG,EAbS,SAAC,GAAY,IAAXC,EAAU,EAAVA,KACxB,OACE,sBAAKJ,UAAU,gBAAf,UACE,+CACA,+BACE,uCAAS,iCAASI,EAAKC,QACvB,0CAAY,iCAASD,EAAKE,WAC1B,gDCJFC,EAAM,SAAC,GAA+B,IAA9BC,EAA6B,EAA7BA,UAAWC,EAAkB,EAAlBA,OAAQC,EAAU,EAAVA,KAAU,EACDC,mBAAS,MADR,mBAClCC,EADkC,KACpBC,EADoB,KAInCC,EAAUN,EAAUO,KAAI,SAAAC,GAC5B,OAA2B,IAAxBA,EAAGC,WAAW,GAAGZ,GACV,cAAC,EAAD,CAAgBR,IAAKmB,EAAGE,WAAW,GAAGC,YAAY,GAAIrB,IAAKkB,EAAGE,WAAW,GAAGC,YAAY,GAChGpB,QAAS,kBAAMc,EAAgB,CAACR,GAAIW,EAAGX,GAAIC,MAAOU,EAAGV,WAGhD,QAKT,OACE,sBAAKN,UAAU,MAAf,UACE,cAAC,IAAD,CACEoB,iBAAkB,CAACC,IAAK,2CACxBC,cAAeb,EACfc,YAAab,EAHf,SAKII,IAEHF,GAAgB,cAAC,EAAD,CAAiBR,KAAMQ,QAM9CL,EAAIiB,aAAc,CAChBf,OAAQ,CACNZ,IAAK,QACLC,KAAM,UAERY,KAAM,GAGOH,QCjCAkB,EARA,WACb,OACE,qBAAKzB,UAAU,SAAf,SACE,4CC4BS0B,MA1Bf,WAAgB,IAAD,EACqBf,mBAAS,IAD9B,mBACNH,EADM,KACKmB,EADL,OAEiBhB,oBAAS,GAF1B,mBAEGiB,GAFH,WAkBb,OAdAC,qBAAU,YACS,uCAAG,gCAAAC,EAAA,6DAClBF,GAAW,GADO,SAEAG,MAAM,mDAFN,cAEZC,EAFY,gBAIKA,EAAIC,OAJT,gBAIXC,EAJW,EAIXA,OAEPP,EAAaO,GACbN,GAAW,GAPO,4CAAH,qDAUjBO,KACC,IAGD,sBAAKnC,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,CAAKQ,UAAWA,QChBP4B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.1458fdc2.chunk.js","sourcesContent":["import {Icon} from '@iconify/react'\r\nimport locationIcon from '@iconify/icons-mdi/fire-alert'\r\n\r\nconst LocationMarker = ({lat, lng, onClick}) => {\r\n  return (\r\n    <div className='location-marker' onClick={onClick}>\r\n      <Icon icon={locationIcon} className='location-icon'/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LocationMarker\r\n","import React from 'react'\r\n\r\nconst LocationInfoBox = ({info}) => {\r\n  return (\r\n    <div className='location-info'>\r\n      <h2>Wildfire Info</h2>\r\n      <ul>\r\n        <li> ID: <strong>{info.id}</strong></li>\r\n        <li> TITLE: <strong>{info.title}</strong></li>\r\n        <small>NASA</small>\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LocationInfoBox\r\n","import GoogleMapReact from 'google-map-react';\r\nimport LocationMarker from \"./LocationMarker\";\r\nimport LocationInfoBox from \"./LocationInfoBox\";\r\nimport { useState } from \"react\";\r\n\r\nconst Map = ({eventData, center, zoom}) => {\r\n  const [locationInfo, setLocationInfo] = useState(null)\r\n \r\n\r\n  const markers = eventData.map(ev=> {\r\n    if(ev.categories[0].id === 8) {\r\n      return  <LocationMarker lat={ev.geometries[0].coordinates[1]} lng={ev.geometries[0].coordinates[0]}\r\n      onClick={() => setLocationInfo({id: ev.id, title: ev.title})}\r\n      />\r\n    }\r\n    return null\r\n  })\r\n\r\n\r\n\r\n  return (\r\n    <div className='map'>\r\n      <GoogleMapReact\r\n        bootstrapURLKeys={{key: 'AIzaSyCjuZ6uZ09F8WZO2RBPZ6BC2oT8YQ7fBYk'}}\r\n        defaultCenter={center}\r\n        defaultZoom={zoom}\r\n      >\r\n         {markers}\r\n      </GoogleMapReact>\r\n      {locationInfo && <LocationInfoBox info={locationInfo}\r\n      />}\r\n    </div>\r\n  )\r\n}\r\n\r\nMap.defaultProps= {\r\n  center: {\r\n    lat: 42.3265,\r\n    lng: -122.8756\r\n  },\r\n  zoom: 3\r\n}\r\n\r\nexport default Map\r\n","import React from 'react'\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <div className='loader'>\r\n      <h2>Loading</h2>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Loader\r\n","import { useState, useEffect } from \"react\";\nimport Map from './component/Map'\nimport Loader from './component/Loader'\nimport Header from './component/Loader'\n\n\n\nfunction App() {\n  const [eventData, setEventData] = useState([])\n  const [loading, setLoading] = useState(false)\n\n  useEffect(() => {\n    const fetchEvents = async () => {\n      setLoading(true)\n      const res = await fetch('https://eonet.sci.gsfc.nasa.gov/api/v2.1/events')\n\n      const {events} = await res.json()\n\n      setEventData(events)\n      setLoading(false)\n    }\n\n    fetchEvents()\n  }, [])\n\n  return (\n    <div className=\"App\">\n      <Header/>\n      <Map eventData={eventData} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}